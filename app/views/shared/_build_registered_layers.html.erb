<%# This function builds a list of data layers that are registered, and are thus stored in the database.
    Layers are actually objects with a type and rubyId field.  Display name should come from the data server itself, and will
      be retrieved separately %>

<script type="text/javascript">
  registeredDataLayers = { };

  makeRegisteredLayer = function(identifier, rubyId, configCount) {
    var o = new Object;
    o.identifier = identifier;
    o.rubyId = rubyId;
    o.configCount = configCount;

    return o;
  };
<%binding.pry%>
  <%= @datasets.reject{ |d| d.finalized == false }.
                map{ |d| "registeredDataLayers[makeKey('" + d.server_url + "','" + d.identifier + "')] = " +
                            "makeRegisteredLayer('" + d.dataset_type + "','" +
                                                      d.id.to_s() + "','" +
                                                      d.mod_configs.count.to_s() + "');\n"
                    }.
                join(' ') %>

  registeredDataServers = [<%= @datasets.reject{|d| d.dataset_type == "Mapping Only"}
                                        .uniq  {|d| d.server_url}
                                        .map   {|d| "'" + d.server_url.gsub('\\') { '\\\\' } + "'"}
                                        .join(',') %>];
</script>
