<!-- Print a table of parameters for the module specified in mod -->

<% newConfig = newConfig || false %>  <%# True if we're creating a new configuration, false if editing an existing one %>

<label class="simple_form label"><%= mode.slice(0,1).capitalize + mode.slice(1..-1) %>s</label>
<table class="zebra" id="<%= mode %>-table">

</table>

<%# Provide code for revalidating form after any best_in_place fields have been altered %>
<% if not defined?(form) %>
  <script type="text/javascript">
    $('.best_in_place').best_in_place().bind('ajax:success', function(e) {
      $.get('get_config_status/<%= config.id %>',
        function(response, status) {
          showButton(response);
          $("body").css("cursor", "auto");          // Restore cursor to normal
        });
    });
  </script>
<% end %>


<script type="text/javascript">

  <%# Creates fn called populateInputTable or populateOutputTable %>
  function populate<%= mode.slice(0,1).capitalize + mode.slice(1..-1) %>Table(items)
  {
    var table = $('#<%= mode %>-table');
    table.empty();

    var headerRow = '<tr><th>Parameter Name</th>' +
                    '<% if mode == :input %><th>Selected Dataset or Value</th><% else %><th>Output Dataset Identifier</th><% end %></tr>';

    table.append(headerRow);

    var itemCount = items.length;

    for(var i = 0; i < itemCount; i++)
    {
      var row  = $(document.createElement('tr'));
      var cell = $(document.createElement('td'));   // Param name

      var html = items[i].title;

      if(items[i].descr != null) {
        html += '<img src="/assets/small_question_mark.gif" style="padding-left: 8px; padding-top: 3px" ' +
                'alt="More info" title="' + items[i].descr + '">'
      }

      cell.html(html);
      row.append(cell);

      cell = $(document.createElement('td'));   // Dataset
      cell.attr("nowrap", true);


    <% if mode == :input %>     <%# Inputs table %>

      if(items[i].type == "complex") {
        var control = createDatasetSelectionControl(items[i].identifier);
  //      control.attr("id") = "select-" + i;
        if(control.children().length == 0) {
            cell.text('No registered datasets of this type');
        }
        else {
          cell.html(control);

          <% if not newConfig %>
  //          control.change(function() {
  //            onSelectedDatasetChanged();
  //          });
          <% end %>
        }
      }
      else {    // Data is a simple type like integer or string -- use a textfield
        cell.html('<input type="text" style="width:100%">');
      }

    <% else %>                      <%# Outputs table %>
        cell.html('<input type="text">');
      <% end %>

      row.append(cell);

      table.append(row);
    }
  }

  <%# Gets triggered when a selected dataset changes, but is only used when editing an existing config %>
//  $("#select-0").change(function () {
//    alert($(this).text());
    <%#  Tell the server we've changed the selected dataset %>
//    $.ajax({
//      type: 'PUT',      // PUT combined with url below triggers "update" action on controller
//      url: '<%= url_for(:controller => 'mod_configs', :action => 'update_dataset') %>',
//      data: 'dataset[identifier]=' + layerName +
//            '&dataset[server_url]=' + server +
//            '&dataset[dataset_type]=' + dataTypeControl.value,
//      headers: { 'X-CSRF-Token': '<%= form_authenticity_token.to_s %>' },
//      success: function(data) { alert("ok!"); }
//    });
//  }


    // processControl.attr({ class:'process-dropdown-control', id:'processControl' });

    // What to do when the user changes dataType for a layer
    // processControl.change(function() {
      // onProcessChanged();
    // });

  // discoveredLayers comes from the /shared/_build_data_layers partial
  function createDatasetSelectionControl(identifier)
  {
    var ctrl = $(document.createElement('select'));

    for(var layerKey in registeredDataLayers) {
      if(registeredDataLayers[layerKey] == identifier) {
        var title = "Unknown Title";
        if(discoveredLayers[layerKey] != undefined) {
          title = discoveredLayers[layerKey].title;
        }
        //else { alert("***");console.log(layerKey); console.log(discoveredLayers);}
        ctrl.append('<option value="' + layerKey + '">' + title + '</option>');
      }
    }

    return ctrl;
  }

 </script>
