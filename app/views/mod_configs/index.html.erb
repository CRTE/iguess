<h1 class="page_header">Modules</h1>
<div class="page_subheader"></div>


<div class="explanation">
  <ul style="list-style-type: square;">
  <li>Users can create Modules from a Module Template by specifying all inputs and outputs that template requires.</li> 
  <li>A list of Module Templates can be found in the Module Catalog.</li>
  </ul>
</div>


<ul class="tabs">
  <li><a class="l" id="t1" href="#configured_modules_tab">Configured Modules</a></li>
  <li><a class="l" id="t2" href="#module_catalog_tab">Module Catalog</a></li>
</ul>

<script type="text/javascript">

  <%
    processIdLookup = Hash.new 
    ctr = 0
    
    @mod_configs.map{ |c| processIdLookup[c.wps_server.url + (c.identifier.blank? ? "" : c.identifier)] = 'x' + ctr.to_s; ctr+=1; }
  %>

  processIdLookup = { };       
  <% lines = "" %>         
  <% processIdLookup.each{ |u, i| lines += "processIdLookup['" + u + "'] = '" + i + "'; " } %>        
  <%= raw lines %>



  var urls = [<%= @wps_servers.map{ |w| "'" + w.url + "'" }.join(',') %>];
  var responses = 0;

  // For each url in our database, start probing the server
  for(var i = 0; i < urls.length; i++) {  WPS.probeWPS(urls[i], onDescribedProcess, onReceivedServerInfo);  }

  function onReceivedServerInfo(url, title, abstract)
  {
    $('.' + makeKey(url, 'title')).text(title);
    $('#' + makeKey(url, 'abstract')).text(abstract);
  }

  // This function is called when the describeProcesses response arrives
  // It will be called repeatedly as responses arrive
  function onDescribedProcess(serverName, process) 
  {
    responses++;
    
    if(responses == WPS.getResponsesExpected()) {
      $('#wps-probing-indicator').hide();
    }
    
    var server = WPS.unwrapProcServer(process.wps.getCapabilitiesUrlGet, process.identifier);
    var processId = processIdLookup[server + process.identifier]; 
    
    $("." + processId).html(process.title || process.identifier);
    $(".status-" + processId).html("Server available");
    
    var description = '<hr><h3 class="process-title">' + process.title + '</h3>' + 
        '<div class="process-descr">' + process.abstract + '</div>' +
        '<div class="process-server-name"><span class="hosted-by">Hosted by:</span> <span class="server-name">' + serverName + '</span></div>' + 
 
        '<table border=0 cellpadding=5>';
    
    if(process.inputs.length == 0) {
      description += '<tr><th colspan=2 class="model-inputs-outputs">No Inputs</th></tr>';
    } else {
      description += '<tr><th colspan=2 class="model-inputs-outputs">Model Inputs</th></tr>';
      description += '<tr style="border: 0"><th>Name</th><th>Description</th></tr>';

      for(var i = 0; i < process.inputs.length; i++) {
        description += getDescrRow(process.inputs[i]);
      }
    }
    
    if(process.outputs.length == 0) {
      description += '<tr><th colspan=2 class="model-inputs-outputs">No Outputs</th></tr>';
    } else {
      description += '<tr><th colspan=2 class="model-inputs-outputs">Model Outputs</th></tr>';
      description += '<tr style="border: 0"><th>Name</th><th>Description</th></tr>';

      for(var i = 0; i < process.outputs.length; i++) {
        description += getDescrRow(process.outputs[i]);
      }
    }
    
    description += '</table>';
    
    description += '<a href="#">Create new configuration for this service</a>';
    
    document.getElementById("wps-result").innerHTML += description;
  };
  
  
  // Formatting helper
  function getDescrRow(record) 
  {
      var title = record.title ? record.title + ' [' + record.identifier + ']' : record.identifier;
      var abstract = record.abstract ? record.abstract : "-";
      
      return '<tr><td style="border: 1px solid black">' + title + '</td>' + 
                 '<td style="border: 1px solid black">' + abstract + '</td></tr>';
  }

</script>



<div id="tab-panes" class="tab-pane-container">
  <div id="configured_modules_tab">
    <% if @mod_configs.empty? %>
      No modules have been configured yet.  <%= link_to 'Click here to create one.', new_mod_config_path %> 
    <% else %>
    
    <div class="page_subheader">Modules that have been configured</div>
    
      <%= render :partial => '/shared/sortable_table_code.html.erb', 
                 :locals => { :initialSortlist => "[[0,0]], headers: { 3: {sorter: false}}" } %> 
    
      <table id="sortable_table" class="zebra sortable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Based on</th>
            <th>Status</th>
            <th>Notes</th>
          </tr>
        </thead>
      
        <tbody>
          <% @mod_configs.each do |mod_config| %>
            <tr>
              <td style="white-space: nowrap;"><%= link_to mod_config.name, mod_config %></td>
              <td class='<%= processIdLookup[mod_config.wps_server.url + (mod_config.identifier.blank? ? "" : mod_config.identifier)] =%>' 
                  style="white-space: nowrap;">Probing server... <img src="assets/loading_spinner.gif"></td>
              <td class='status-<%= processIdLookup[mod_config.wps_server.url + (mod_config.identifier.blank? ? "" : mod_config.identifier)] =%>'
                  style="white-space: nowrap;">Probing server... <img src="assets/loading_spinner.gif"></td>
              <td><%= mod_config.descr %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    
      <br />
      
      <%= link_to 'New Module Configuration', new_mod_config_path %>
    <% end %>
  </div>
  
  <div id="module_catalog_tab">
    <div>
      Catalog of modules found on the following servers:
      <ul id="server-list"></ul>
      <a href="#">Add new server</a>
    </div>

    <div id="wps-probing-indicator">Probing servers... <img src="assets/loading_spinner.gif"></div>
    <div id="wps-result"></div>

    <%#= render :partial => '/mods/mods_catalog', :locals => { :all_mods => @mods } %>
  </div>
</div>

<%# Dynamically generate placeholders for the list of servers; these will be populated after we hear from our servers %>
<script type="text/javascript">
  var li, titDiv, absDiv;
  
  <% @wps_servers.each do |s| %>
    li = $(document.createElement('li'));
    
    titDiv = $(document.createElement('div'));
    absDiv = $(document.createElement('div'));

    $('#server-list').append(li);
    li.append(titDiv);
    li.append(absDiv);

    titDiv.attr('class', 'wps-title');
    titDiv.attr('class', makeKey('<%= s.url %>', 'title'));
    
    absDiv.attr('class', 'wps-descr');
    absDiv.attr('id', makeKey('<%= s.url %>', 'abstract'));
  <% end %>
</script>










